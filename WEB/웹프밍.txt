CSS
===========
--HTML 문서의 색이나 모양 등 외관을 꾸미는 언어.
ㄴ디자인, 레이아웃 및 다양한 장치 및 화면 크기에 대한 디스플레이의 변형을 포함하여 웹 페이지 스타일을 정의하는 데 사용.
--CSS로 작성된 코드를 스타일 시트라고 부름.
--현재 CSS3 : CSS level 3
ㄴCSS1 > CSS2 > CSS3 > CSS4(현재 표준화 작업 중)
--https://www.w3schools.com/css

HTML문서에 CSS3 스타일 시트 만들기 (적용 우선순위 1, 2, 3)
--인라인 스타일
ㄴ태그의 style 속성으로 사용
--내부 스타일 시트
ㄴ<style>....</style>
--와부 스타일 시트(link를 통해 외부 스타일 시트 파일에서 적용한 스타일)
ㄴ<link rel "=stylesheet" type="text/css href=03.css">

CSS의 구성

=셀렉터 Selector
section{
	background-color : yellow ;
}
                    속성             값
                     ----------------
                      묶어서 "선언"

=셀렉터의 종류
-요소 셀렉터
--HTML 요소 이름을 기반으로 요소 선택
--HTML 태그 이름사용
-- *는 전체 요소 지정
-클래스 셀렉터
--html 요소에 class 속성을 가진 요소를 선택(class 속성은 그룹화 시켜줌)
--마침표(.) 다음에 class 속성의 값 사용 (클래스를 찾아라!)★
-아이디 셀렉터
--id 속성을 가진 요소를 선택
--해시(#) 다음에 id 속성의 값 사용 (아이디에 해당하는 #s1을 찾아라!)

------------------------------------
section{
	background-color : yellow ;
}
.c1 {
	color : red ;
}
#s1 {
	color : blue ;
}
// 요소셀렉터에서 각 섹션 배경을 노랗게 바꾸고.
//c1 클래스 셀레터를 통해 c1클래스 글자를 모두 red로 바꿨다.
//이후 #s1 아이디 셀렉터를 통해 s1이라는 아이디의 글자색만 다시 blue로 바꿨다.
-----------------------------------
=셀렉터 그룹화
--동일한 스타일을 적용하는 셀렉터는 쉼표(,)로 구분
header, footer {
	background-color : lightblue;
}
ㄴ 두 곳에 동일한 스타일을 적용이 가능하다!

=박스 모델
-HTML 요소의 실제 내용, 패딩, 테두리, 여백으로 구성
내용content과 border 사이의 공백(padding) border밖의 여유를 줄때(margin)

marginㅣborderㅣpaddingㅣcontentㅣpaddingㅣborderㅣmargin

=여백 지정
-안쪽 여백 
--padding 속성으로 지정
---1개의 값 : 4면 모두 동일한 값
---2개의 값 : 상단하단과 왼쪽오른쪽 값
---3개의 값 : 상단, 왼쪽오른쪽, 하단 값
---4개의 값 : 상단 오른쪽 하단 왼쪽(시계방향) 값
--각 면에 대하여 지정
--- padding-top, padding-right, padding-bottom, padding-left
-바깥쪽 여백
--margin 속성으로 지정
---1개의 값 : 4면 모두 동일한 값
---2개의 값 : 상단하단과 왼쪽오른쪽 값
---3개의 값 : 상단, 왼쪽오른쪽, 하단 값
---4개의 값 : 상단 오른쪽 하단 왼쪽(시계방향) 값
--각 면에 대하여 지정
---margin-top, margin-right, margin-bottom, margin-left

=배경 지정
-요소의 배경색 지정
--background-color : 색상 값;
-색상 값 지정 방법
--색상 이름을 사용하여 지정
--- https://www.w3schools.com/colors/colors_names.asp
--- background-color : lightblue;
--RGB 색상
---빨강, 초록, 파랑을 혼합하여 사용
---background-color : rgb(1/3,216,230);
--RGBA 색상
---RGB 색상에 0~1까지 알파 값을 이용하여 투명도를 지정
---background-color : rgb(173,216,230,0.5);
--HEX (16진수) 값 사용
---background-color #add8e6

=테두리 지정
-border
--요소의 테두리 두께 지정
-border-style
--dotted : 점선 테두리
--dashed : 점선 테두리
--solid : 단색 테두리
--double : 이중 테두리
--none : 테두리 없음
-border-width
--테두리 너비
-border-color
--테두리 색상
-테두리 스타일, 너비, 색상
--2개의 값 지정
---위쪽 아래 테두리
---왼쪽 오른쪽 테두리
--4개의 값 지정
---위쪽 테두리
---오른쪽 테두리
---아래쪽 테두리
---왼쪽 테두리

=목록 스타일
-목록의 아이템 모양
--ul
---list-style-type: circle;
---list-style-type: square;
--ol
---list-style-type: upper-roman;
---list-style-type: lower-alpha;
-------------------------------------
ui{
	list-style-type: circle;
}
ol{
	list-style-type: upper-roman;
}
-------------------------------------
<header>
-페이지나 섹션의 머리말 표현
-페이지 제목, 페이지를 소개하는 간단한 설명
<nav>
-하이퍼링크들을 모아 놓은 특별한 섹선
-페이지 내 목차를 만드는 용도




















=================================================
=================================================

DOM 개념을 익히고 셀렉터를 조합하여 접근하기
==================================

DOM (문서 객체 모델)
-문서이 구조회된 표현을 제공하며 웹 펭지의 객체 지향 표현
-구조화된 문서는 DOM을 사용하여 트리 구조를 얻어낼 수 있음
-셀렉터 조합하기 - 계층 접근용 셀렉터
--조상/자손 셀렉터 : 자손 관계인 2개 이상의 태그 나열
ㄴㄴ예) ul li{color : dodgerblue; } #ul자손 li에 적용되는 스타일 시트
======> 공백 너머의 ul이라는 조상을 찾는 것.
--부모/자식 셀렉터(Parent/child selector) : 부모 자식 관계인 두 셀렉터를 > 기호로 조합
ㄴㄴ예) ul > li {color : dodgerblue; } #ul의 직계 자식인 li에 적용되는 스타일 시트
======> 꺽쇠 너머의 ul이라는 부모를 찾는 것. (부모가 ul 인 것)

가상클래스
-선택된 요소의 특별한 상태를 지정하기 위해 웹 문서에 존재하지 않는 임의의 선택지
-하이퍼링크 요소 a와 관련된 가상 클래스
-a;link  : 하이퍼링크 요소 중 아직 방문하지 않은 하이퍼링크에 적용
-a;visited  : 하이퍼링크 요소 중 한번 이상 방문한 하이퍼링크에 적용
-a;hover  : 하이퍼링크 요소에 마우스를 올려 놓았을 때 적용
-a;active  : 하이퍼링크 요소를 클릭했을 때 적용

display 속성
-HTML 요소를 어떻게 보여줄 지 결정
--HTML 요소는 기본 값을 가짐 
ㄴㄴ예) dic, p, ul : 블록 요소
ㄴㄴ예) span, a; 인라인 요소       <span>속성</span>
--dispaly 속성을 이용하여 기본값 변경
---dispaly:none;
----영역을 찾아하지 않고 보이지 않음
---display:block;
----블록 영역으로 기본적으로 브라우저 전체 너비가 적용되고 줄바꿈 적용
----가로와 세로를 지정할 수 있음
---display;inline;
----인라인 영역으로 요소의 내용만큼만 너비가 적용되고 줄바꿈이 적용되지 않음
----가로와 세로를 지정할 수 없음
---dispaly;inline-block;
----블록과 인라인 영역으로 중간 형태로 크기를 변경할수 있고 줄바꿈이 적용되지 않음
----가로와 세로를 지정할 수 있음

box-sizing 속성
-HTM 블록 요소들의 실제 너비와 높이는 너비와 높이 값에 안쪽 여백, 바깥쪽 여백, 테두리 값을 모두 더해서 표시됨
-box-sizing: border-box;
--실제 너비와 높이를 지정한 너비와 높이로 고정
--즉 안쪽 여백, 바깥쪽 여백, 테두리 값을 지정하더라도 지정한 너비와 높이만큼 표시가 되도록 함.

float 속성/clear 속성
-float 속성
--특정 요소를 정렬하여 흐르듯이 배치
--float:left; 왼쪽으로 배치
--float:right: 오른쪽으로 배치
-clear 속성
--float 속성을 해제하고 줄바꿈
-- 양쪽에 아무것도 안 왔으면 좋곘다면 clear both

구글 아이콘 사용
-<head>요소에 추가
ㄴ<link rel="stylesheet" href="https://fpmts/gppg;eeapis.com/icon?family=Material+Icons">               이 링크를 꼭 추가해줘야 한다ㅏㅏㅏㅏ
ㄴ예)<i> class="material-icons">cloud </i>      위 링크 덕분에 이 <i>가 적용됨


**HTML로 구조를 잡고 CSS로 디자인을 입히는 과정**
























=================================================
=================================================

HTML FORM
==================================
<input type="text">   //를 통해 from을 만들고 text라는 타입을 정해줌
<input type="radio">
<input type="checkbox">
<input type="submit">
<input type="reset">

사용자 입력 : form 요소

<form name="myform" method="get" action="05.php">
</form>
-사용자가 입력한 정보를 서버로 전송하는 요소
--name 속성 : 폼을 구별하기 위한 속성
--method 속성 : 데이터를 전달하는 방식
----get 방식 : url에 변수를 포함시켜 요청
----post 방식 : 데이터가 본문에 포함되어 전달됨
--action속성 : 데이터를 전송할 URL
-텍스트 필드, 체크 박스, 라디오 버튼, 제출 버튼 등과 같은 입력 요소를 포함

<input> 요소
-종류  => 모양은 타입으로 정의하고 있다.
<input type="text">
<input type="password">
<input type="checkbox">
<input type="radio">
<input type="submit">
<input type="rest">
<input type="button">
<input type="hidden">
-속성
name : 각 요소를 구분
value : 초기값 설정이나 버튼의 캡션 값
readonly : 읽기만 가능하고 변경이 안됨
disabled : 사용 안되도록 함
size : 크기 설정
maxlength : 최대 입력 가능 문자 수
placeholder힌트 문자

<input type="radio">
-여러 항목 중에서 하나만 선택되도록 하기 위해 그룹으로 설정하기 위해 name 속성을 동일하게 작성
-페이지 실행 시 기본값 설정
--해당 요소에 checked 속성을 사용
--checkbox인 경우도 기본값으로 선택을 표시하기 위해서도 해당 요소에 checked 속성을 사용

<input type="radio" name="r_gender" id="r_gender man">
<input type="radio" name="r_gender" id="r_gender woman" checked>

<select> 요소 
-드롭 다운 목록을 정의
-목록의 항목은 <option> 요소로 작성
-페이지 시작 시 기본값 설정
--해당 항목에 selected 속성 사용

<textarea> 요소
-여러 줄 텍스트 자료 입력   <select></select> 사이의 항목들
<texterea name="txt_content" id="txt_content"></textarea>

<label> 요소
-입력 요소의 레이블
--for 속성을 이용하여 해당 입력 요소 연동
--for 속성의 값은 해당 입력 요소의 id값
<label for="txt_name">성명</lable><br/>
<input type="text" name="txt_name" id="txt_name" placeholder="성명 입력">
-radio와 checkbox의 레이블
--글자를 선택해도 해당 항목을 선택하도록 함         <label></label>

입력요소 css
-속성 셀렉터
--태그[속성]
---지정한 태그에 속성이 있는 요소
---예) lable[for] {color : red;}
--태그[속성=값]
---지정한 태그에 속성값이 지정한 값과 같은 요소
---예) input[type=text] {height : 40px; }

=================================================
=================================================

JAVA SCRIPT
==================================
객체 기반의 스크립트 언어
-웹 브라우저에 인터프리터가 내장되어 주로 클라이언트 측 프로그래밍 작성
--node.is와 같은 프레임워크를 사용하면 서버 측 프로그래밍에서도 사용 가능
-웹 페이지의 동작을 구현
--html 요소의 내용, 속성, 스타일 등을 변경

자바스크립트 코드 작성
-내부 자바스크립트 코드로 작성
--<script> 요소로 삽입
-외부 자바스크립트 파일 삽입하여 작성
--<script src=""> 요소의 src 속성을 이용하여 외부 자바스크립트 파일 추가
--단, 작성된 외부 자바스크립트 파일의 확장자는 .js로 사용

자바스크립트 시작하기

보통 자바스크립트는 function으로 묶여져 있다.

자바스크립트 호출
-자바 스크립트 함수 호출
--주로 click 메소드를 통해서 함수 호출
--<input type = button" onclick="함수명(인수1,인수2,,,,)">

-자바스크립트 함수 작성
<script>
	function 함수명 (매개변수1,매개변수2,,){
	실행문 ...;
	return 값 ;
	}
</script>
-인수 (argument)
--함수가 호출될 떄 함수로 값을 전달해준느 변수나 상수
-매개변수(parameter)
--하수를 호출할 떄 인수로 전달된 값을 함수 내부에서 사용할 수 있게 해주는 변수
-반환문
--함수의 실행을 중단하고, return 키워드 다음에 명시된 표현식의 값을 호출자에게 반환

자바스크립트 출력
1. Window 객체의 alert() 메소드 사용
function hello() {
	alert("안녕하세요") ;
}
2. document.write() 메소드 사용
function hello() {
	document.write("안녕하세요!") ;
}
3. console.log() 메소드 사용
function hello() {
	console.log("안녕하세요!") ;
}
4. innerHTML 를 이용하는 방법
function hello() {
	document.getElementsByTagName ("hi!") [0].innerHTML = "안녕하세요." ;
}

HTML DOM 요소 선택 메소드
-getElementsByTagName()
--요소의 태그 이름을 매개변수로 받고 해당하는 요소가 담인 NodeList를 반환
-getElementByld()
--찾으려는 요소 ID를 매개변수로 받고 해당 요소를 찾아 변환
--존재하지 않을 경우 null을 반환

자바스크립트 변수(Variable)
-변수
--프로그램이 실행되는 동안 데이터 값을 저장하는 기억공간
-선언
--var 키워드를 사용하여 선언
---시작문자는 영문자, "_"  $ 중 하나로 시작.
---대소문자를 구분
---예약어는 사용할 수 없음
--미리 변수의 타입을 정하는 것이 아니라 변수가 들어가는 값에 따라 변수의 타입이 변함
---기본형 : 숫자(Number), 문자열(String), Boolean
---특수형 : 널(Null), Undefined
---참조형 : 배열(Array), 객체(Object)

 자바스크립트 연산자
-산술 연산자
-- +,*, /
-- %(나머지 연산자)
-- ++, --
-비교 연산자
-- >, <, >=, <=, !=
-논리 연산자
-- &&(and), ||(or), !(not)

자바스크립트 조건문(if)
if (조건식) {
...
}
// 조건식이 참일 경우 수행할 실행문만 작성
---
if (조건식) {
...
}
else {
...
}
// 조건식이 참일 경우 수행할 실행문은 fi 절
// 조건식이 거짓일 경우 수행할 실행문은 else
---
if (조건식) {
...
}
else if (조건식) {
...
}
else {
...
}
// 조건식이 참일 경우 수행할 실행문은 if 절
// 조건식이 거짓일 경우
// 다시 조건식을 판단하여 참일 경우와
// 거짓인 경우를 구분하여 실행

switch(표현식) {
	case 값1:
	실행문 ;
	...
	break;
	case 값2:
	실행문 ;
	...
	break;
...
	default :
	실행문 ;
	...
	break;
}
// 표현식의 결과 값을 case 구문 값에서 찾아서 해당하는 실행문을 수행
//단, 해당하는 case 문이 수행한 경우에는 break문을 사용하여 swich 블록을 빠져나옴

자바스크립트 인수와 매개변수

